//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré à partir d'un modèle.
//
//     Des modifications manuelles apportées à ce fichier peuvent conduire à un comportement inattendu de votre application.
//     Les modifications manuelles apportées à ce fichier sont remplacées si le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GESCHANGE.Db
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class GESSRMAEntities : DbContext
    {
        public GESSRMAEntities()
            : base("name=GESSRMAEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Entrees> Entrees { get; set; }
        public virtual DbSet<Grades> Grades { get; set; }
        public virtual DbSet<Pieces> Pieces { get; set; }
        public virtual DbSet<Sorties> Sorties { get; set; }
        public virtual DbSet<Users> Users { get; set; }
        public virtual DbSet<Vehicules> Vehicules { get; set; }
    
        public virtual ObjectResult<Select_Pieces_Result> Select_Pieces()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Select_Pieces_Result>("Select_Pieces");
        }
    
        public virtual int Insert_Pieces(Nullable<int> pies_ID, string pies_Nom, string pies_Refference, Nullable<int> pies_Quantite, string pies_Note)
        {
            var pies_IDParameter = pies_ID.HasValue ?
                new ObjectParameter("pies_ID", pies_ID) :
                new ObjectParameter("pies_ID", typeof(int));
    
            var pies_NomParameter = pies_Nom != null ?
                new ObjectParameter("pies_Nom", pies_Nom) :
                new ObjectParameter("pies_Nom", typeof(string));
    
            var pies_RefferenceParameter = pies_Refference != null ?
                new ObjectParameter("pies_Refference", pies_Refference) :
                new ObjectParameter("pies_Refference", typeof(string));
    
            var pies_QuantiteParameter = pies_Quantite.HasValue ?
                new ObjectParameter("pies_Quantite", pies_Quantite) :
                new ObjectParameter("pies_Quantite", typeof(int));
    
            var pies_NoteParameter = pies_Note != null ?
                new ObjectParameter("pies_Note", pies_Note) :
                new ObjectParameter("pies_Note", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_Pieces", pies_IDParameter, pies_NomParameter, pies_RefferenceParameter, pies_QuantiteParameter, pies_NoteParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> MaxID_Pieces()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("MaxID_Pieces");
        }
    
        public virtual ObjectResult<Pieces> Select_Pieces_By_ID(Nullable<int> pies_ID)
        {
            var pies_IDParameter = pies_ID.HasValue ?
                new ObjectParameter("pies_ID", pies_ID) :
                new ObjectParameter("pies_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pieces>("Select_Pieces_By_ID", pies_IDParameter);
        }
    
        public virtual ObjectResult<Pieces> Select_Pieces_By_ID(Nullable<int> pies_ID, MergeOption mergeOption)
        {
            var pies_IDParameter = pies_ID.HasValue ?
                new ObjectParameter("pies_ID", pies_ID) :
                new ObjectParameter("pies_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pieces>("Select_Pieces_By_ID", mergeOption, pies_IDParameter);
        }
    
        public virtual int Update_Pieces(Nullable<int> pies_ID, string pies_Nom, string pies_Refference, Nullable<int> pies_Quantite, string pies_Note)
        {
            var pies_IDParameter = pies_ID.HasValue ?
                new ObjectParameter("pies_ID", pies_ID) :
                new ObjectParameter("pies_ID", typeof(int));
    
            var pies_NomParameter = pies_Nom != null ?
                new ObjectParameter("pies_Nom", pies_Nom) :
                new ObjectParameter("pies_Nom", typeof(string));
    
            var pies_RefferenceParameter = pies_Refference != null ?
                new ObjectParameter("pies_Refference", pies_Refference) :
                new ObjectParameter("pies_Refference", typeof(string));
    
            var pies_QuantiteParameter = pies_Quantite.HasValue ?
                new ObjectParameter("pies_Quantite", pies_Quantite) :
                new ObjectParameter("pies_Quantite", typeof(int));
    
            var pies_NoteParameter = pies_Note != null ?
                new ObjectParameter("pies_Note", pies_Note) :
                new ObjectParameter("pies_Note", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Pieces", pies_IDParameter, pies_NomParameter, pies_RefferenceParameter, pies_QuantiteParameter, pies_NoteParameter);
        }
    
        public virtual int Delete_Pieces(Nullable<int> pies_ID)
        {
            var pies_IDParameter = pies_ID.HasValue ?
                new ObjectParameter("pies_ID", pies_ID) :
                new ObjectParameter("pies_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_Pieces", pies_IDParameter);
        }
    }
}
